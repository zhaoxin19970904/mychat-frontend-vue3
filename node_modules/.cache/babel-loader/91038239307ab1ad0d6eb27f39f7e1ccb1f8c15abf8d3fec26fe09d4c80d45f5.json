{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, reactive } from 'vue';\nimport axios from 'axios';\nimport { useStore } from 'vuex';\nexport default {\n  __name: 'ChatPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const store = useStore();\n    const newMessage = ref('');\n    const messages = reactive([]);\n    const newAws = ref('');\n    store.dispatch('initializeState');\n    const send = async () => {\n      if (newMessage.value.trim() !== '') {\n        const currentTime = new Date().toLocaleTimeString();\n        const textform = `your_name: (${currentTime}) \\n ${newMessage.value}`;\n        store.dispatch('addMessage', textform);\n        messages.push(textform);\n        const prompt = `${newMessage.value}`;\n        try {\n          const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n            model: \"gpt-3.5-turbo\",\n            messages: [{\n              role: \"system\",\n              content: \"You are a helpful assistant.\"\n            }, {\n              role: \"user\",\n              content: prompt\n            }]\n          }, {\n            headers: {\n              'Content-Type': 'application/json',\n              'Authorization': `Bearer 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`\n            }\n          });\n          newAws.value = response.data.choices[0].message.content;\n        } catch (error) {\n          console.error(\"Error:\", error.response ? error.response.data : error.message);\n        }\n        store.dispatch('addMessage', `AI (${currentTime}): \\n ${newAws.value}`);\n        messages.push(`AI (${currentTime}): \\n ${newAws.value}`);\n        newMessage.value = '';\n      }\n    };\n    const __returned__ = {\n      store,\n      newMessage,\n      messages,\n      newAws,\n      send,\n      ref,\n      reactive,\n      get axios() {\n        return axios;\n      },\n      get useStore() {\n        return useStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","axios","useStore","store","newMessage","messages","newAws","dispatch","send","value","trim","currentTime","Date","toLocaleTimeString","textform","push","prompt","response","post","model","role","content","headers","data","choices","message","error","console"],"sources":["C:/Users/bobxi/OneDrive/Desktop/Ecloud/tut8/my-vue-app/src/components/ChatPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"chat-container\">\r\n      <div class=\"chat-history\">\r\n        <div v-for=\"(msg, index) in store.state.messages\" :key=\"index\" class=\"chat-message\">\r\n        {{ msg }}\r\n      </div>\r\n      </div>\r\n      <div class=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"newMessage\"\r\n          @keyup.enter=\"send\"\r\n          placeholder=\"text message...\"\r\n        />\r\n        <button @click=\"send\">Send</button>\r\n        <a-button @click=\"save\">Save and Back</a-button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, reactive } from 'vue';\r\n  import axios from 'axios';\r\n  import { useStore } from 'vuex';\r\n\r\n  const store = useStore();\r\nconst newMessage = ref('');\r\nconst messages = reactive([]);\r\nconst newAws = ref('');\r\nstore.dispatch('initializeState');\r\n\r\nconst send = async () => {\r\n  if (newMessage.value.trim() !== '') {\r\n    const currentTime = new Date().toLocaleTimeString();\r\n    const textform = `your_name: (${currentTime}) \\n ${newMessage.value}`;\r\n    store.dispatch('addMessage', textform);\r\n    messages.push(textform); \r\n  const prompt = `${newMessage.value}`;\r\n\r\n  try {\r\n    const response = await axios.post('https://api.openai.com/v1/chat/completions', {\r\n      model: \"gpt-3.5-turbo\",\r\n      messages: [\r\n        { role: \"system\", content: \"You are a helpful assistant.\" },\r\n        { role: \"user\", content: prompt }\r\n      ],\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer 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`,\r\n      }\r\n    });\r\n\r\n    newAws.value = response.data.choices[0].message.content; \r\n  } catch (error) {\r\n    console.error(\"Error:\", error.response ? error.response.data : error.message);\r\n  }\r\n  store.dispatch('addMessage', `AI (${currentTime}): \\n ${newAws.value}`);\r\n    messages.push(`AI (${currentTime}): \\n ${newAws.value}`);\r\n    newMessage.value = ''; \r\n  }\r\n};\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .chat-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    height: 400px;\r\n    border: 1px solid #ccc;\r\n  }\r\n  \r\n  .chat-history {\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .chat-message {\r\n    margin-bottom: 10px;\r\n    padding: 5px;\r\n    background-color: #f3f3f3;\r\n  }\r\n  \r\n  .chat-input {\r\n    display: flex;\r\n    padding-top: 10px;\r\n  }\r\n  \r\n  input[type=\"text\"] {\r\n    flex-grow: 1;\r\n    margin-right: 10px;\r\n    padding: 10px;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  .chat-history {\r\n  /* 应用 CSS 以保持文本格式，包括换行 */\r\n  white-space: pre-wrap;\r\n}\r\n.chat-message pre {\r\n  white-space: pre-wrap; /* 保留空白符和格式 */\r\n  word-wrap: break-word; /* 防止内容溢出 */\r\n  margin: 0; /* 调整 pre 元素的默认外边距 */\r\n}\r\n/* 其他样式可以根据需要调整 */\r\n  </style>"],"mappings":";AAqBE,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AACnC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,MAAM;;;;;;;IAE/B,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAC;IAC1B,MAAME,UAAU,GAAGL,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMM,QAAQ,GAAGL,QAAQ,CAAC,EAAE,CAAC;IAC7B,MAAMM,MAAM,GAAGP,GAAG,CAAC,EAAE,CAAC;IACtBI,KAAK,CAACI,QAAQ,CAAC,iBAAiB,CAAC;IAEjC,MAAMC,IAAI,GAAG,MAAAA,CAAA,KAAY;MACvB,IAAIJ,UAAU,CAACK,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;QAClC,MAAMC,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;QACnD,MAAMC,QAAQ,GAAI,eAAcH,WAAY,QAAOP,UAAU,CAACK,KAAM,EAAC;QACrEN,KAAK,CAACI,QAAQ,CAAC,YAAY,EAAEO,QAAQ,CAAC;QACtCT,QAAQ,CAACU,IAAI,CAACD,QAAQ,CAAC;QACzB,MAAME,MAAM,GAAI,GAAEZ,UAAU,CAACK,KAAM,EAAC;QAEpC,IAAI;UACF,MAAMQ,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,4CAA4C,EAAE;YAC9EC,KAAK,EAAE,eAAe;YACtBd,QAAQ,EAAE,CACR;cAAEe,IAAI,EAAE,QAAQ;cAAEC,OAAO,EAAE;YAA+B,CAAC,EAC3D;cAAED,IAAI,EAAE,MAAM;cAAEC,OAAO,EAAEL;YAAO,CAAC;UAErC,CAAC,EAAE;YACDM,OAAO,EAAE;cACP,cAAc,EAAE,kBAAkB;cAClC,eAAe,EAAG;YACpB;UACF,CAAC,CAAC;UAEFhB,MAAM,CAACG,KAAK,GAAGQ,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACJ,OAAO;QACzD,CAAC,CAAC,OAAOK,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACT,QAAQ,GAAGS,KAAK,CAACT,QAAQ,CAACM,IAAI,GAAGG,KAAK,CAACD,OAAO,CAAC;QAC/E;QACAtB,KAAK,CAACI,QAAQ,CAAC,YAAY,EAAG,OAAMI,WAAY,SAAQL,MAAM,CAACG,KAAM,EAAC,CAAC;QACrEJ,QAAQ,CAACU,IAAI,CAAE,OAAMJ,WAAY,SAAQL,MAAM,CAACG,KAAM,EAAC,CAAC;QACxDL,UAAU,CAACK,KAAK,GAAG,EAAE;MACvB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}