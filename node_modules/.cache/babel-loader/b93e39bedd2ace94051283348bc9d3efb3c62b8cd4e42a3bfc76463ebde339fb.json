{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_a_menu = _resolveComponent(\"a-menu\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_a_button, {\n    onClick: \"\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Add New User\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_a_button, null, {\n    default: _withCtx(() => [_createTextVNode(\"Log Out\")]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_a_menu, {\n    selectedKeys: $setup.current,\n    \"onUpdate:selectedKeys\": _cache[0] || (_cache[0] = $event => $setup.current = $event),\n    mode: \"horizontal\",\n    items: $setup.items\n  }, null, 8 /* PROPS */, [\"selectedKeys\", \"items\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_a_button","onClick","default","_withCtx","_createTextVNode","_","_component_a_menu","selectedKeys","$setup","current","_cache","$event","mode","items"],"sources":["C:\\Users\\bobxi\\OneDrive\\Desktop\\Ecloud\\tut8\\my-vue-app\\src\\components\\AdminPage.vue"],"sourcesContent":["<template>\r\n    <a-button onClick>Add New User</a-button>\r\n    <a-button>Log Out</a-button>\r\n    <a-menu v-model:selectedKeys=\"current\" mode=\"horizontal\" :items=\"items\"></a-menu>\r\n  </template>\r\n  <script setup>\r\n  import {  ref } from 'vue';\r\n  import { } from '@ant-design/icons-vue';\r\n  import { useRouter } from 'vue-router';\r\n\r\nconst router = useRouter();\r\n  const current = ref(['admin']);\r\n  const items = ref([\r\n    {\r\n      key: 'admin',\r\n      label: 'Admin List',\r\n      title: 'Admin List',\r\n      onClick: () => router.push('/adminlist')\r\n    },\r\n    {\r\n      key: 'client',\r\n \r\n      label: 'Client List',\r\n      title: 'Client List',\r\n      onClick: () => router.push('/clientlist')\r\n    },\r\n    \r\n  ]);\r\n  </script>"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SACIC,YAAA,CAAyCC,mBAAA;IAA/BC,OAAO,EAAP;EAAO;IADrBC,OAAA,EAAAC,QAAA,CACsB,MAAY,CADlCC,gBAAA,CACsB,cAAY,E;IADlCC,CAAA;MAEIN,YAAA,CAA4BC,mBAAA;IAFhCE,OAAA,EAAAC,QAAA,CAEc,MAAO,CAFrBC,gBAAA,CAEc,SAAO,E;IAFrBC,CAAA;MAGIN,YAAA,CAAiFO,iBAAA;IAAjEC,YAAY,EAAEC,MAAA,CAAAC,OAAO;IAHzC,yBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAGkCH,MAAA,CAAAC,OAAO,GAAAE,MAAA;IAAEC,IAAI,EAAC,YAAY;IAAEC,KAAK,EAAEL,MAAA,CAAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}