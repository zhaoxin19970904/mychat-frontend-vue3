{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.dom-exception.stack.js\";\nimport { reactive } from 'vue';\nimport axios from 'axios';\nimport { useRouter } from 'vue-router';\nimport { jwtDecode } from 'jwt-decode';\nimport { useGoogleLogin } from 'vue3-google-oauth2';\nexport default {\n  __name: 'loginForm',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const googleLogin = useGoogleLogin();\n    const formState = reactive({\n      username: '',\n      password: '',\n      remember: true\n    });\n    const onFinish = async values => {\n      try {\n        const response = await axios.post('http://localhost:8000/submit', values);\n        const token = response.data.token;\n        console.log(token);\n        localStorage.setItem('token', token);\n        const decoded = jwtDecode(token);\n        if (decoded.role === 'admin') {\n          router.push('/adminpage/adminlist');\n        } else {\n          alert('No permission');\n          history.go(-1);\n        }\n      } catch (error) {\n        console.error('Error submitting form', error.response || error);\n        alert('Login failed');\n      }\n    };\n\n    // Google登录处理\n    const handleGoogleLogin = async () => {\n      try {\n        const googleUser = await googleLogin.signIn();\n        const idToken = googleUser.getAuthResponse().id_token;\n        console.log(idToken);\n        const response = await fetch('http://localhost:3001/google', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            token: idToken\n          })\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const responseData = await response.json();\n        console.log('Received response:', responseData);\n        if (responseData.token) {\n          localStorage.setItem('token', responseData.token);\n          const decodedToken = parseJwt(responseData.token);\n          console.log(decodedToken.role);\n          console.log(decodedToken.username);\n          if (decodedToken && decodedToken.role === 'admin') {\n            router.push('/admin');\n          } else {\n            alert('No permission');\n          }\n        } else {\n          alert('Login failed: No token received');\n        }\n      } catch (error) {\n        alert('Failed to login!');\n        console.error('Error:', error);\n      }\n    };\n    function parseJwt(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {\n          return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n        }).join(''));\n        return JSON.parse(jsonPayload);\n      } catch (error) {\n        return null;\n      }\n    }\n    const __returned__ = {\n      router,\n      googleLogin,\n      formState,\n      onFinish,\n      handleGoogleLogin,\n      parseJwt,\n      reactive,\n      get axios() {\n        return axios;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get jwtDecode() {\n        return jwtDecode;\n      },\n      get useGoogleLogin() {\n        return useGoogleLogin;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["reactive","axios","useRouter","jwtDecode","useGoogleLogin","router","googleLogin","formState","username","password","remember","onFinish","values","response","post","token","data","console","log","localStorage","setItem","decoded","role","push","alert","history","go","error","handleGoogleLogin","googleUser","signIn","idToken","getAuthResponse","id_token","fetch","method","headers","body","JSON","stringify","ok","Error","status","responseData","json","decodedToken","parseJwt","base64Url","split","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","parse"],"sources":["C:/Users/bobxi/OneDrive/Desktop/Ecloud/tut8/my-vue-app/src/components/loginForm.vue"],"sourcesContent":["<template>\r\n  <h1>Welcome Chat</h1>\r\n  <a-form\r\n    :model=\"formState\"\r\n    name=\"basic\"\r\n    :label-col=\"{ span: 8 }\"\r\n    :wrapper-col=\"{ span: 16 }\"\r\n    autocomplete=\"off\"\r\n    @finish=\"onFinish\"\r\n    @finishFailed=\"onFinishFailed\"\r\n  >\r\n    <a-form-item\r\n      label=\"Username\"\r\n      name=\"username\"\r\n      :rules=\"[{ required: true, message: 'Please input your username!' }]\"\r\n    >\r\n      <a-input v-model:value=\"formState.username\" />\r\n    </a-form-item>\r\n\r\n    <a-form-item\r\n      label=\"Password\"\r\n      name=\"password\"\r\n      :rules=\"[{ required: true, message: 'Please input your password!' }]\"\r\n    >\r\n      <a-input-password v-model:value=\"formState.password\" />\r\n    </a-form-item>\r\n\r\n    <a-form-item name=\"remember\" :wrapper-col=\"{ offset: 8, span: 16 }\">\r\n      <a-checkbox v-model:checked=\"formState.remember\">Remember me</a-checkbox>\r\n    </a-form-item>\r\n\r\n    <a-form-item :wrapper-col=\"{ offset: 8, span: 16 }\">\r\n      <a-button type=\"primary\" html-type=\"submit\">Submit</a-button>\r\n    </a-form-item>\r\n  </a-form>\r\n  <div>\r\n    <button @click=\"handleGoogleLogin\">Login with Google</button>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { reactive } from 'vue';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'vue-router';\r\nimport { jwtDecode } from 'jwt-decode';\r\nimport { useGoogleLogin } from 'vue3-google-oauth2';\r\n\r\nconst router = useRouter();\r\nconst googleLogin = useGoogleLogin();\r\nconst formState = reactive({\r\n  username: '',\r\n  password: '',\r\n  remember: true,\r\n});\r\nconst onFinish = async values => {\r\n  try {\r\n    const response = await axios.post('http://localhost:8000/submit', values);\r\n    const token = response.data.token; \r\n    console.log(token)\r\n    localStorage.setItem('token', token); \r\n\r\n    const decoded = jwtDecode(token); \r\n    \r\n    if (decoded.role === 'admin') {\r\n      router.push('/adminpage/adminlist');\r\n    } else {\r\n      alert('No permission');\r\n      history.go(-1); \r\n    }\r\n  } catch (error) {\r\n    console.error('Error submitting form', error.response || error);\r\n    alert('Login failed');\r\n  }\r\n};\r\n\r\n\r\n\r\n// Google登录处理\r\nconst handleGoogleLogin = async () => {\r\n  try {\r\n    const googleUser = await googleLogin.signIn();\r\n    const idToken = googleUser.getAuthResponse().id_token;\r\n    console.log(idToken);\r\n\r\n    const response = await fetch('http://localhost:3001/google', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ token: idToken }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    const responseData = await response.json();\r\n    console.log('Received response:', responseData);\r\n\r\n    if (responseData.token) {\r\n      localStorage.setItem('token', responseData.token);\r\n      const decodedToken = parseJwt(responseData.token);\r\n      console.log(decodedToken.role);\r\n      console.log(decodedToken.username);\r\n\r\n      if (decodedToken && decodedToken.role === 'admin') {\r\n        router.push('/admin');\r\n      } else {\r\n        alert('No permission');\r\n      }\r\n    } else {\r\n      alert('Login failed: No token received');\r\n    }\r\n  } catch (error) {\r\n    alert('Failed to login!');\r\n    console.error('Error:', error);\r\n  }\r\n};\r\n\r\nfunction parseJwt(token) {\r\n  try {\r\n    const base64Url = token.split('.')[1];\r\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n    const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n    }).join(''));\r\n\r\n    return JSON.parse(jsonPayload);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n</script>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}