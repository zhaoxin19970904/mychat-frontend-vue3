{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_table = _resolveComponent(\"a-table\");\n  return _openBlock(), _createBlock(_component_a_table, {\n    dataSource: $setup.dataSource,\n    columns: $setup.columns\n  }, null, 8 /* PROPS */, [\"dataSource\", \"columns\"]);\n}","map":{"version":3,"names":["_createBlock","_component_a_table","dataSource","$setup","columns"],"sources":["C:\\Users\\bobxi\\OneDrive\\Desktop\\Ecloud\\tut8\\my-vue-app\\src\\components\\AdminList.vue"],"sourcesContent":["<template>\r\n    <a-table :dataSource=\"dataSource\" :columns=\"columns\" />\r\n  </template>\r\n\r\n  <script>\r\n    import { ref, onMounted } from 'vue';\r\n\r\nexport default {\r\n  setup() {\r\n    const dataSource = ref([]);\r\n    const columns = ref([\r\n      {\r\n        title: '姓名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n      },\r\n      {\r\n        title: '年龄',\r\n        dataIndex: 'age',\r\n        key: 'age',\r\n      },\r\n      {\r\n        title: '住址',\r\n        dataIndex: 'address',\r\n        key: 'address',\r\n      },\r\n    ]);\r\n\r\n    // 模拟异步获取数据\r\n    const fetchData = async () => {\r\n      try {\r\n        // 使用 fetch API 获取数据\r\n        const response = await fetch('http://localhost:8000/users');\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        const data = await response.json();\r\n\r\n        // 假设返回的 data 已经是期望的格式\r\n        dataSource.value = data.map((item, index) => ({\r\n          key: String(index + 1),\r\n          ...item\r\n        }));\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    // 组件挂载时获取数据\r\n    onMounted(() => {\r\n      fetchData();\r\n    });\r\n\r\n    return {\r\n      dataSource,\r\n      columns,\r\n    };\r\n  },\r\n};\r\n  </script>"],"mappings":";;;uBACIA,YAAA,CAAuDC,kBAAA;IAA7CC,UAAU,EAAEC,MAAA,CAAAD,UAAU;IAAGE,OAAO,EAAED,MAAA,CAAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}