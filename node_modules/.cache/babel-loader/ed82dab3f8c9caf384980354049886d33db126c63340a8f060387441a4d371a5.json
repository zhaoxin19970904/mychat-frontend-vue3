{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport router from '@/router';\nimport { jwtDecode } from 'jwt-decode'; // 确保正确地导入了 jwtDecode\n\nexport default {\n  __name: 'AdminPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const current = ref(['admin']);\n    let userName = ref('');\n\n    // 封装了解码 Token 的函数\n    function decodeToken() {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const decoded = jwtDecode(token);\n          userName.value = decoded.username; // 假设 token 确实包含用户名信息\n          console.log(decoded.username, decoded.role, decoded.id);\n        } catch (error) {\n          console.error(error);\n          // 可以在这里处理错误，例如显示错误信息或重定向到登录页面\n          // router.push('/login');\n        }\n      }\n    }\n\n    // 解码 Token\n    decodeToken();\n\n    // 登出函数\n    const logOut = () => {\n      localStorage.removeItem('token');\n      router.push('/');\n    };\n\n    // 添加新用户函数\n    const addNewUser = () => {\n      router.push('/adduser');\n    };\n    const __returned__ = {\n      current,\n      get userName() {\n        return userName;\n      },\n      set userName(v) {\n        userName = v;\n      },\n      decodeToken,\n      logOut,\n      addNewUser,\n      ref,\n      get router() {\n        return router;\n      },\n      get jwtDecode() {\n        return jwtDecode;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","router","jwtDecode","current","userName","decodeToken","token","localStorage","getItem","decoded","value","username","console","log","role","id","error","logOut","removeItem","push","addNewUser"],"sources":["C:/Users/bobxi/OneDrive/Desktop/Ecloud/tut8/my-vue-app/src/components/AdminPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1>Hello, {{ userName }}</h1>\r\n      <a-button @click=\"addNewUser\">Add New User</a-button>\r\n      <a-button @click=\"logOut\">Log Out</a-button>\r\n      <a-menu v-model:selectedKeys=\"current\" mode=\"horizontal\">\r\n        <a-menu-item key=\"admin\">\r\n          <router-link to=\"/adminpage/adminlist\">Admin List</router-link>\r\n        </a-menu-item>\r\n        <a-menu-item key=\"client\">\r\n          <router-link to=\"/adminpage/clientlist\">Client List</router-link>\r\n        </a-menu-item>\r\n      </a-menu>\r\n      <router-view></router-view>\r\n    </div>\r\n  </template>\r\n  <script setup>\r\n  import { ref } from 'vue';\r\n  import router from '@/router';\r\n  import {jwtDecode} from 'jwt-decode'; // 确保正确地导入了 jwtDecode\r\n  \r\n  const current = ref(['admin']);\r\n  let userName = ref('');\r\n  \r\n  // 封装了解码 Token 的函数\r\n  function decodeToken() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        userName.value = decoded.username; // 假设 token 确实包含用户名信息\r\n        console.log(decoded.username, decoded.role, decoded.id);\r\n      } catch (error) {\r\n        console.error(error);\r\n        // 可以在这里处理错误，例如显示错误信息或重定向到登录页面\r\n        // router.push('/login');\r\n      }\r\n    }\r\n  }\r\n  \r\n  // 解码 Token\r\n  decodeToken();\r\n  \r\n  // 登出函数\r\n  const logOut = () => {\r\n    localStorage.removeItem('token');\r\n    router.push('/');\r\n  }\r\n  \r\n  // 添加新用户函数\r\n  const addNewUser = () => {\r\n    router.push('/adduser');\r\n  }\r\n  </script>\r\n  "],"mappings":";AAiBE,SAASA,GAAG,QAAQ,KAAK;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAAQC,SAAS,QAAO,YAAY,CAAC,CAAC;;;;;;;;IAEtC,MAAMC,OAAO,GAAGH,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC;IAC9B,IAAII,QAAQ,GAAGJ,GAAG,CAAC,EAAE,CAAC;;IAEtB;IACA,SAASK,WAAWA,CAAA,EAAG;MACrB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,OAAO,GAAGP,SAAS,CAACI,KAAK,CAAC;UAChCF,QAAQ,CAACM,KAAK,GAAGD,OAAO,CAACE,QAAQ,CAAC,CAAC;UACnCC,OAAO,CAACC,GAAG,CAACJ,OAAO,CAACE,QAAQ,EAAEF,OAAO,CAACK,IAAI,EAAEL,OAAO,CAACM,EAAE,CAAC;QACzD,CAAC,CAAC,OAAOC,KAAK,EAAE;UACdJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;UACpB;UACA;QACF;MACF;IACF;;IAEA;IACAX,WAAW,CAAC,CAAC;;IAEb;IACA,MAAMY,MAAM,GAAGA,CAAA,KAAM;MACnBV,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC;MAChCjB,MAAM,CAACkB,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;;IAED;IACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACvBnB,MAAM,CAACkB,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}