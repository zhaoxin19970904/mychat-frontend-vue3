{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d7527a92\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-history\"\n};\nconst _hoisted_3 = {\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_button = _resolveComponent(\"a-button\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.store.state.messages, (msg, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"chat-message\"\n    }, _toDisplayString(msg), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newMessage = $event),\n    onKeyup: _withKeys($setup.send, [\"enter\"]),\n    placeholder: \"text message...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.newMessage]]), _createElementVNode(\"button\", {\n    onClick: $setup.send\n  }, \"Send\"), _createVNode(_component_a_button, {\n    onClick: _ctx.save\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Save Data\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","store","state","messages","msg","index","key","_hoisted_3","type","_cache","$event","newMessage","onKeyup","_withKeys","send","placeholder","onClick","_createVNode","_component_a_button","_ctx","save","default","_withCtx","_createTextVNode","_"],"sources":["C:\\Users\\bobxi\\OneDrive\\Desktop\\Ecloud\\tut8\\my-vue-app\\src\\components\\ChatPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"chat-container\">\r\n      <div class=\"chat-history\">\r\n        <div v-for=\"(msg, index) in store.state.messages\" :key=\"index\" class=\"chat-message\">\r\n        {{ msg }}\r\n      </div>\r\n      </div>\r\n      <div class=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"newMessage\"\r\n          @keyup.enter=\"send\"\r\n          placeholder=\"text message...\"\r\n        />\r\n        <button @click=\"send\">Send</button>\r\n        <a-button @click=\"save\">Save Data</a-button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, reactive } from 'vue';\r\n  import axios from 'axios';\r\n  import { useStore } from 'vuex';\r\n\r\n  const store = useStore();\r\nconst newMessage = ref('');\r\nconst messages = reactive([]);\r\nconst newAws = ref('');\r\nstore.dispatch('initializeState');\r\n\r\nconst send = async () => {\r\n  if (newMessage.value.trim() !== '') {\r\n    const currentTime = new Date().toLocaleTimeString();\r\n    const textform = `your_name: (${currentTime}) \\n ${newMessage.value}`;\r\n    store.dispatch('addMessage', textform);\r\n    messages.push(textform); \r\n  const prompt = `${newMessage.value}`;\r\n\r\n  try {\r\n    const response = await axios.post('https://api.openai.com/v1/chat/completions', {\r\n      model: \"gpt-3.5-turbo\",\r\n      messages: [\r\n        { role: \"system\", content: \"You are a helpful assistant.\" },\r\n        { role: \"user\", content: prompt }\r\n      ],\r\n    }, {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer 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`,\r\n      }\r\n    });\r\n\r\n    newAws.value = response.data.choices[0].message.content; \r\n  } catch (error) {\r\n    console.error(\"Error:\", error.response ? error.response.data : error.message);\r\n  }\r\n  store.dispatch('addMessage', `AI (${currentTime}): \\n ${newAws.value}`);\r\n    messages.push(`AI (${currentTime}): \\n ${newAws.value}`);\r\n    newMessage.value = ''; \r\n  }\r\n};\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .chat-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    height: 400px;\r\n    border: 1px solid #ccc;\r\n  }\r\n  \r\n  .chat-history {\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .chat-message {\r\n    margin-bottom: 10px;\r\n    padding: 5px;\r\n    background-color: #f3f3f3;\r\n  }\r\n  \r\n  .chat-input {\r\n    display: flex;\r\n    padding-top: 10px;\r\n  }\r\n  \r\n  input[type=\"text\"] {\r\n    flex-grow: 1;\r\n    margin-right: 10px;\r\n    padding: 10px;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px 20px;\r\n  }\r\n\r\n  .chat-history {\r\n  /* 应用 CSS 以保持文本格式，包括换行 */\r\n  white-space: pre-wrap;\r\n}\r\n.chat-message pre {\r\n  white-space: pre-wrap; /* 保留空白符和格式 */\r\n  word-wrap: break-word; /* 防止内容溢出 */\r\n  margin: 0; /* 调整 pre 元素的默认外边距 */\r\n}\r\n/* 其他样式可以根据需要调整 */\r\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAc;;EAKpBA,KAAK,EAAC;AAAY;;;uBANzBC,mBAAA,CAgBM,OAhBNC,UAgBM,GAfJC,mBAAA,CAIM,OAJNC,UAIM,I,kBAHJH,mBAAA,CAEII,SAAA,QALZC,WAAA,CAGoCC,MAAA,CAAAC,KAAK,CAACC,KAAK,CAACC,QAAQ,EAHxD,CAGqBC,GAAG,EAAEC,KAAK;yBAAvBX,mBAAA,CAEI;MAF+CY,GAAG,EAAED,KAAK;MAAEZ,KAAK,EAAC;wBAClEW,GAAG;oCAGRR,mBAAA,CASM,OATNW,UASM,G,gBARJX,mBAAA,CAKE;IAJAY,IAAI,EAAC,MAAM;IATrB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUmBV,MAAA,CAAAW,UAAU,GAAAD,MAAA;IAClBE,OAAK,EAXhBC,SAAA,CAWwBb,MAAA,CAAAc,IAAI;IAClBC,WAAW,EAAC;iEAFHf,MAAA,CAAAW,UAAU,E,GAIrBf,mBAAA,CAAmC;IAA1BoB,OAAK,EAAEhB,MAAA,CAAAc;EAAI,GAAE,MAAI,GAC1BG,YAAA,CAA4CC,mBAAA;IAAjCF,OAAK,EAAEG,IAAA,CAAAC;EAAI;IAf9BC,OAAA,EAAAC,QAAA,CAegC,MAAS,CAfzCC,gBAAA,CAegC,WAAS,E;IAfzCC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}