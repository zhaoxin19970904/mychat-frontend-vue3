{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { cloneDeep } from 'lodash-es';\nimport { reactive, ref } from 'vue';\nexport default {\n  __name: 'AdminList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const columns = [{\n      title: 'name',\n      dataIndex: 'name',\n      width: '25%'\n    }, {\n      title: 'age',\n      dataIndex: 'age',\n      width: '15%'\n    }, {\n      title: 'address',\n      dataIndex: 'address',\n      width: '40%'\n    }, {\n      title: 'operation',\n      dataIndex: 'operation'\n    }];\n    const data = [];\n    for (let i = 0; i < 100; i++) {\n      data.push({\n        key: i.toString(),\n        name: `Edrward ${i}`,\n        age: 32,\n        address: `London Park no. ${i}`\n      });\n    }\n    const dataSource = ref(data);\n    const editableData = reactive({});\n    const edit = key => {\n      editableData[key] = cloneDeep(dataSource.value.filter(item => key === item.key)[0]);\n    };\n    const save = key => {\n      Object.assign(dataSource.value.filter(item => key === item.key)[0], editableData[key]);\n      delete editableData[key];\n    };\n    const cancel = key => {\n      delete editableData[key];\n    };\n    const __returned__ = {\n      columns,\n      data,\n      dataSource,\n      editableData,\n      edit,\n      save,\n      cancel,\n      get cloneDeep() {\n        return cloneDeep;\n      },\n      reactive,\n      ref\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["cloneDeep","reactive","ref","columns","title","dataIndex","width","data","i","push","key","toString","name","age","address","dataSource","editableData","edit","value","filter","item","save","Object","assign","cancel"],"sources":["C:/Users/bobxi/OneDrive/Desktop/Ecloud/tut8/my-vue-app/src/components/AdminList.vue"],"sourcesContent":["<template>\r\n    <a-table :columns=\"columns\" :data-source=\"dataSource\" bordered>\r\n      <template #bodyCell=\"{ column, text, record }\">\r\n        <template v-if=\"['name', 'age', 'address'].includes(column.dataIndex)\">\r\n          <div>\r\n            <a-input\r\n              v-if=\"editableData[record.key]\"\r\n              v-model:value=\"editableData[record.key][column.dataIndex]\"\r\n              style=\"margin: -5px 0\"\r\n            />\r\n            <template v-else>\r\n              {{ text }}\r\n            </template>\r\n          </div>\r\n        </template>\r\n        <template v-else-if=\"column.dataIndex === 'operation'\">\r\n          <div class=\"editable-row-operations\">\r\n            <span v-if=\"editableData[record.key]\">\r\n              <a-typography-link @click=\"save(record.key)\">Save</a-typography-link>\r\n              <a-popconfirm title=\"Sure to cancel?\" @confirm=\"cancel(record.key)\">\r\n                <a>Cancel</a>\r\n              </a-popconfirm>\r\n            </span>\r\n            <span v-else>\r\n              <a @click=\"edit(record.key)\">Edit</a>\r\n            </span>\r\n          </div>\r\n        </template>\r\n      </template>\r\n    </a-table>\r\n  </template>\r\n  <script setup>\r\n  import { cloneDeep } from 'lodash-es';\r\n  import { reactive, ref } from 'vue';\r\n  const columns = [\r\n    {\r\n      title: 'name',\r\n      dataIndex: 'name',\r\n      width: '25%',\r\n    },\r\n    {\r\n      title: 'age',\r\n      dataIndex: 'age',\r\n      width: '15%',\r\n    },\r\n    {\r\n      title: 'address',\r\n      dataIndex: 'address',\r\n      width: '40%',\r\n    },\r\n    {\r\n      title: 'operation',\r\n      dataIndex: 'operation',\r\n    },\r\n  ];\r\n  const data = [];\r\n  for (let i = 0; i < 100; i++) {\r\n    data.push({\r\n      key: i.toString(),\r\n      name: `Edrward ${i}`,\r\n      age: 32,\r\n      address: `London Park no. ${i}`,\r\n    });\r\n  }\r\n  const dataSource = ref(data);\r\n  const editableData = reactive({});\r\n  const edit = key => {\r\n    editableData[key] = cloneDeep(dataSource.value.filter(item => key === item.key)[0]);\r\n  };\r\n  const save = key => {\r\n    Object.assign(dataSource.value.filter(item => key === item.key)[0], editableData[key]);\r\n    delete editableData[key];\r\n  };\r\n  const cancel = key => {\r\n    delete editableData[key];\r\n  };\r\n  </script>\r\n  <style scoped>\r\n  .editable-row-operations a {\r\n    margin-right: 8px;\r\n  }\r\n  </style>"],"mappings":";AAgCE,SAASA,SAAS,QAAQ,WAAW;AACrC,SAASC,QAAQ,EAAEC,GAAG,QAAQ,KAAK;;;;;;;IACnC,MAAMC,OAAO,GAAG,CACd;MACEC,KAAK,EAAE,MAAM;MACbC,SAAS,EAAE,MAAM;MACjBC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,KAAK,EAAE,KAAK;MACZC,SAAS,EAAE,KAAK;MAChBC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,KAAK,EAAE,SAAS;MAChBC,SAAS,EAAE,SAAS;MACpBC,KAAK,EAAE;IACT,CAAC,EACD;MACEF,KAAK,EAAE,WAAW;MAClBC,SAAS,EAAE;IACb,CAAC,CACF;IACD,MAAME,IAAI,GAAG,EAAE;IACf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;MAC5BD,IAAI,CAACE,IAAI,CAAC;QACRC,GAAG,EAAEF,CAAC,CAACG,QAAQ,CAAC,CAAC;QACjBC,IAAI,EAAG,WAAUJ,CAAE,EAAC;QACpBK,GAAG,EAAE,EAAE;QACPC,OAAO,EAAG,mBAAkBN,CAAE;MAChC,CAAC,CAAC;IACJ;IACA,MAAMO,UAAU,GAAGb,GAAG,CAACK,IAAI,CAAC;IAC5B,MAAMS,YAAY,GAAGf,QAAQ,CAAC,CAAC,CAAC,CAAC;IACjC,MAAMgB,IAAI,GAAGP,GAAG,IAAI;MAClBM,YAAY,CAACN,GAAG,CAAC,GAAGV,SAAS,CAACe,UAAU,CAACG,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIV,GAAG,KAAKU,IAAI,CAACV,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACrF,CAAC;IACD,MAAMW,IAAI,GAAGX,GAAG,IAAI;MAClBY,MAAM,CAACC,MAAM,CAACR,UAAU,CAACG,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIV,GAAG,KAAKU,IAAI,CAACV,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEM,YAAY,CAACN,GAAG,CAAC,CAAC;MACtF,OAAOM,YAAY,CAACN,GAAG,CAAC;IAC1B,CAAC;IACD,MAAMc,MAAM,GAAGd,GAAG,IAAI;MACpB,OAAOM,YAAY,CAACN,GAAG,CAAC;IAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}