{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d7527a92\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"chat-history\"\n};\nconst _hoisted_3 = {\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.messages, (msg, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"chat-message\"\n    }, _toDisplayString(msg), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.newMessage = $event),\n    onKeyup: _withKeys($setup.send, [\"enter\"]),\n    placeholder: \"text message...\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $setup.newMessage]]), _createElementVNode(\"button\", {\n    onClick: $setup.send\n  }, \"Send\")])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$setup","messages","msg","index","key","_hoisted_3","type","_cache","$event","newMessage","onKeyup","_withKeys","send","placeholder","onClick"],"sources":["C:\\Users\\bobxi\\OneDrive\\Desktop\\Ecloud\\tut8\\my-vue-app\\src\\components\\ChatPage.vue"],"sourcesContent":["<template>\r\n    <div class=\"chat-container\">\r\n      <div class=\"chat-history\">\r\n        <div v-for=\"(msg, index) in messages\" :key=\"index\" class=\"chat-message\">\r\n          {{ msg }}\r\n        </div>\r\n      </div>\r\n      <div class=\"chat-input\">\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"newMessage\"\r\n          @keyup.enter=\"send\"\r\n          placeholder=\"text message...\"\r\n        />\r\n        <button @click=\"send\">Send</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue';\r\n\r\n// 使用 ref 创建响应式变量\r\nconst newMessage = ref('');\r\nconst messages = ref([]); // 用于存储聊天历史的数组\r\n\r\n// 定义发送消息的方法\r\nconst send = () => {\r\n  if (newMessage.value.trim() !== '') {\r\n    const currentTime = new Date().toLocaleTimeString();\r\n    messages.value.push(`your_name: (${currentTime}) \\n ${newMessage.value}`); // 将新消息添加到聊天历史中\r\n    newMessage.value = ''; // 重置新消息输入框\r\n  }\r\n};\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .chat-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n    height: 400px;\r\n    border: 1px solid #ccc;\r\n  }\r\n  \r\n  .chat-history {\r\n    flex-grow: 1;\r\n    overflow-y: auto;\r\n  }\r\n  \r\n  .chat-message {\r\n    margin-bottom: 10px;\r\n    padding: 5px;\r\n    background-color: #f3f3f3;\r\n  }\r\n  \r\n  .chat-input {\r\n    display: flex;\r\n    padding-top: 10px;\r\n  }\r\n  \r\n  input[type=\"text\"] {\r\n    flex-grow: 1;\r\n    margin-right: 10px;\r\n    padding: 10px;\r\n  }\r\n  \r\n  button {\r\n    padding: 10px 20px;\r\n  }\r\n  </style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAgB;;EACpBA,KAAK,EAAC;AAAc;;EAKpBA,KAAK,EAAC;AAAY;;uBANzBC,mBAAA,CAeM,OAfNC,UAeM,GAdJC,mBAAA,CAIM,OAJNC,UAIM,I,kBAHJH,mBAAA,CAEMI,SAAA,QALdC,WAAA,CAGoCC,MAAA,CAAAC,QAAQ,EAH5C,CAGqBC,GAAG,EAAEC,KAAK;yBAAvBT,mBAAA,CAEM;MAFiCU,GAAG,EAAED,KAAK;MAAEV,KAAK,EAAC;wBACpDS,GAAG;oCAGVN,mBAAA,CAQM,OARNS,UAQM,G,gBAPJT,mBAAA,CAKE;IAJAU,IAAI,EAAC,MAAM;IATrB,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUmBR,MAAA,CAAAS,UAAU,GAAAD,MAAA;IAClBE,OAAK,EAXhBC,SAAA,CAWwBX,MAAA,CAAAY,IAAI;IAClBC,WAAW,EAAC;iEAFHb,MAAA,CAAAS,UAAU,E,GAIrBb,mBAAA,CAAmC;IAA1BkB,OAAK,EAAEd,MAAA,CAAAY;EAAI,GAAE,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}