{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_table = _resolveComponent(\"a-table\");\n  return _openBlock(), _createBlock(_component_a_table, {\n    columns: $setup.columns,\n    \"row-key\": record => record.login.uuid,\n    \"data-source\": $setup.dataSource,\n    pagination: $setup.pagination,\n    loading: $setup.loading,\n    onChange: $setup.handleTableChange\n  }, {\n    bodyCell: _withCtx(({\n      column,\n      text\n    }) => [column.dataIndex === 'name' ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createTextVNode(_toDisplayString(text.first) + \" \" + _toDisplayString(text.last), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"row-key\", \"data-source\", \"pagination\", \"loading\"]);\n}","map":{"version":3,"names":["_createBlock","_component_a_table","columns","$setup","record","login","uuid","dataSource","pagination","loading","onChange","handleTableChange","bodyCell","_withCtx","column","text","dataIndex","_createElementBlock","_Fragment","key","_createTextVNode","_toDisplayString","first","last","_createCommentVNode","_"],"sources":["C:\\Users\\bobxi\\OneDrive\\Desktop\\Ecloud\\tut8\\my-vue-app\\src\\components\\AdminList.vue"],"sourcesContent":["<template>\r\n    <a-table\r\n      :columns=\"columns\"\r\n      :row-key=\"record => record.login.uuid\"\r\n      :data-source=\"dataSource\"\r\n      :pagination=\"pagination\"\r\n      :loading=\"loading\"\r\n      @change=\"handleTableChange\"\r\n    >\r\n      <template #bodyCell=\"{ column, text }\">\r\n        <template v-if=\"column.dataIndex === 'name'\">{{ text.first }} {{ text.last }}</template>\r\n      </template>\r\n    </a-table>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { computed } from 'vue';\r\n  import { usePagination } from 'vue-request';\r\n  import axios from 'axios';\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      sorter: true,\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Gender',\r\n      dataIndex: 'gender',\r\n      filters: [\r\n        { text: 'Male', value: 'male' },\r\n        { text: 'Female', value: 'female' },\r\n      ],\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Email',\r\n      dataIndex: 'email',\r\n    },\r\n  ];\r\n  \r\n  const queryData = (params) => {\r\n    return axios.get('https://randomuser.me/api?noinfo', {\r\n      params,\r\n    });\r\n  };\r\n  \r\n  const {\r\n    data: dataSource,\r\n    run,\r\n    loading,\r\n    current,\r\n    pageSize,\r\n  } = usePagination(queryData, {\r\n    formatResult: (res) => res.data.results,\r\n    pagination: {\r\n      currentKey: 'page',\r\n      pageSizeKey: 'results',\r\n    },\r\n  });\r\n  \r\n  const pagination = computed(() => ({\r\n    total: 200, // 这里应该是后端返回的总条目数\r\n    current: current.value,\r\n    pageSize: pageSize.value,\r\n  }));\r\n  \r\n  const handleTableChange = (pag, filters, sorter) => {\r\n    run({\r\n      results: pag.pageSize,\r\n      page: pag?.current,\r\n      sortField: sorter.field,\r\n      sortOrder: sorter.order,\r\n      ...filters,\r\n    });\r\n  };\r\n  </script>"],"mappings":";;;uBACIA,YAAA,CAWUC,kBAAA;IAVPC,OAAO,EAAEC,MAAA,CAAAD,OAAO;IAChB,SAAO,EAAEE,MAAM,IAAIA,MAAM,CAACC,KAAK,CAACC,IAAI;IACpC,aAAW,EAAEH,MAAA,CAAAI,UAAU;IACvBC,UAAU,EAAEL,MAAA,CAAAK,UAAU;IACtBC,OAAO,EAAEN,MAAA,CAAAM,OAAO;IAChBC,QAAM,EAAEP,MAAA,CAAAQ;;IAEEC,QAAQ,EAAAC,QAAA,CACjB,CAAwF;MADnEC,MAAM;MAAEC;IAAI,OACjBD,MAAM,CAACE,SAAS,e,cAAhCC,mBAAA,CAAwFC,SAAA;MAVhGC,GAAA;IAAA,IAAAC,gBAAA,CAAAC,gBAAA,CAUwDN,IAAI,CAACO,KAAK,IAAG,GAAC,GAAAD,gBAAA,CAAGN,IAAI,CAACQ,IAAI,iB,+BAVlFC,mBAAA,e;IAAAC,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}